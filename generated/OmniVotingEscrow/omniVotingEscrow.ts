// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MessageFailed extends ethereum.Event {
  get params(): MessageFailed__Params {
    return new MessageFailed__Params(this);
  }
}

export class MessageFailed__Params {
  _event: MessageFailed;

  constructor(event: MessageFailed) {
    this._event = event;
  }

  get _srcChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get _reason(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RetryMessageSuccess extends ethereum.Event {
  get params(): RetryMessageSuccess__Params {
    return new RetryMessageSuccess__Params(this);
  }
}

export class RetryMessageSuccess__Params {
  _event: RetryMessageSuccess;

  constructor(event: RetryMessageSuccess) {
    this._event = event;
  }

  get _srcChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _payloadHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class SetMinDstGas extends ethereum.Event {
  get params(): SetMinDstGas__Params {
    return new SetMinDstGas__Params(this);
  }
}

export class SetMinDstGas__Params {
  _event: SetMinDstGas;

  constructor(event: SetMinDstGas) {
    this._event = event;
  }

  get _dstChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _type(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get _minDstGas(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetPrecrime extends ethereum.Event {
  get params(): SetPrecrime__Params {
    return new SetPrecrime__Params(this);
  }
}

export class SetPrecrime__Params {
  _event: SetPrecrime;

  constructor(event: SetPrecrime) {
    this._event = event;
  }

  get precrime(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetTrustedRemote extends ethereum.Event {
  get params(): SetTrustedRemote__Params {
    return new SetTrustedRemote__Params(this);
  }
}

export class SetTrustedRemote__Params {
  _event: SetTrustedRemote;

  constructor(event: SetTrustedRemote) {
    this._event = event;
  }

  get _remoteChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _path(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class SetTrustedRemoteAddress extends ethereum.Event {
  get params(): SetTrustedRemoteAddress__Params {
    return new SetTrustedRemoteAddress__Params(this);
  }
}

export class SetTrustedRemoteAddress__Params {
  _event: SetTrustedRemoteAddress;

  constructor(event: SetTrustedRemoteAddress) {
    this._event = event;
  }

  get _remoteChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _remoteAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class TotalSupplyToChain extends ethereum.Event {
  get params(): TotalSupplyToChain__Params {
    return new TotalSupplyToChain__Params(this);
  }
}

export class TotalSupplyToChain__Params {
  _event: TotalSupplyToChain;

  constructor(event: TotalSupplyToChain) {
    this._event = event;
  }

  get dstChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get totalSupplyPoint(): TotalSupplyToChainTotalSupplyPointStruct {
    return changetype<TotalSupplyToChainTotalSupplyPointStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class TotalSupplyToChainTotalSupplyPointStruct extends ethereum.Tuple {
  get bias(): BigInt {
    return this[0].toBigInt();
  }

  get slope(): BigInt {
    return this[1].toBigInt();
  }

  get ts(): BigInt {
    return this[2].toBigInt();
  }

  get blk(): BigInt {
    return this[3].toBigInt();
  }
}

export class UserBalToChain extends ethereum.Event {
  get params(): UserBalToChain__Params {
    return new UserBalToChain__Params(this);
  }
}

export class UserBalToChain__Params {
  _event: UserBalToChain;

  constructor(event: UserBalToChain) {
    this._event = event;
  }

  get dstChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get localUser(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get remoteUser(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get userPoint(): UserBalToChainUserPointStruct {
    return changetype<UserBalToChainUserPointStruct>(
      this._event.parameters[3].value.toTuple()
    );
  }

  get totalSupplyPoint(): UserBalToChainTotalSupplyPointStruct {
    return changetype<UserBalToChainTotalSupplyPointStruct>(
      this._event.parameters[4].value.toTuple()
    );
  }
}

export class UserBalToChainUserPointStruct extends ethereum.Tuple {
  get bias(): BigInt {
    return this[0].toBigInt();
  }

  get slope(): BigInt {
    return this[1].toBigInt();
  }

  get ts(): BigInt {
    return this[2].toBigInt();
  }

  get blk(): BigInt {
    return this[3].toBigInt();
  }
}

export class UserBalToChainTotalSupplyPointStruct extends ethereum.Tuple {
  get bias(): BigInt {
    return this[0].toBigInt();
  }

  get slope(): BigInt {
    return this[1].toBigInt();
  }

  get ts(): BigInt {
    return this[2].toBigInt();
  }

  get blk(): BigInt {
    return this[3].toBigInt();
  }
}

export class omniVotingEscrow__estimateSendTotalSupplyResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNativeFee(): BigInt {
    return this.value0;
  }

  getZroFee(): BigInt {
    return this.value1;
  }
}

export class omniVotingEscrow__estimateSendUserBalanceResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNativeFee(): BigInt {
    return this.value0;
  }

  getZroFee(): BigInt {
    return this.value1;
  }
}

export class omniVotingEscrow extends ethereum.SmartContract {
  static bind(address: Address): omniVotingEscrow {
    return new omniVotingEscrow("omniVotingEscrow", address);
  }

  estimateSendTotalSupply(
    _dstChainId: i32,
    _useZro: boolean,
    _adapterParams: Bytes
  ): omniVotingEscrow__estimateSendTotalSupplyResult {
    let result = super.call(
      "estimateSendTotalSupply",
      "estimateSendTotalSupply(uint16,bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );

    return new omniVotingEscrow__estimateSendTotalSupplyResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_estimateSendTotalSupply(
    _dstChainId: i32,
    _useZro: boolean,
    _adapterParams: Bytes
  ): ethereum.CallResult<omniVotingEscrow__estimateSendTotalSupplyResult> {
    let result = super.tryCall(
      "estimateSendTotalSupply",
      "estimateSendTotalSupply(uint16,bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new omniVotingEscrow__estimateSendTotalSupplyResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  estimateSendUserBalance(
    _dstChainId: i32,
    _useZro: boolean,
    _adapterParams: Bytes
  ): omniVotingEscrow__estimateSendUserBalanceResult {
    let result = super.call(
      "estimateSendUserBalance",
      "estimateSendUserBalance(uint16,bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );

    return new omniVotingEscrow__estimateSendUserBalanceResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_estimateSendUserBalance(
    _dstChainId: i32,
    _useZro: boolean,
    _adapterParams: Bytes
  ): ethereum.CallResult<omniVotingEscrow__estimateSendUserBalanceResult> {
    let result = super.tryCall(
      "estimateSendUserBalance",
      "estimateSendUserBalance(uint16,bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new omniVotingEscrow__estimateSendUserBalanceResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  failedMessages(param0: i32, param1: Bytes, param2: BigInt): Bytes {
    let result = super.call(
      "failedMessages",
      "failedMessages(uint16,bytes,uint64):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toBytes();
  }

  try_failedMessages(
    param0: i32,
    param1: Bytes,
    param2: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "failedMessages",
      "failedMessages(uint16,bytes,uint64):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getConfig(
    _version: i32,
    _chainId: i32,
    param2: Address,
    _configType: BigInt
  ): Bytes {
    let result = super.call(
      "getConfig",
      "getConfig(uint16,uint16,address,uint256):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_version)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_chainId)),
        ethereum.Value.fromAddress(param2),
        ethereum.Value.fromUnsignedBigInt(_configType)
      ]
    );

    return result[0].toBytes();
  }

  try_getConfig(
    _version: i32,
    _chainId: i32,
    param2: Address,
    _configType: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getConfig",
      "getConfig(uint16,uint16,address,uint256):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_version)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_chainId)),
        ethereum.Value.fromAddress(param2),
        ethereum.Value.fromUnsignedBigInt(_configType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTrustedRemoteAddress(_remoteChainId: i32): Bytes {
    let result = super.call(
      "getTrustedRemoteAddress",
      "getTrustedRemoteAddress(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_remoteChainId))]
    );

    return result[0].toBytes();
  }

  try_getTrustedRemoteAddress(_remoteChainId: i32): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getTrustedRemoteAddress",
      "getTrustedRemoteAddress(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_remoteChainId))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isTrustedRemote(_srcChainId: i32, _srcAddress: Bytes): boolean {
    let result = super.call(
      "isTrustedRemote",
      "isTrustedRemote(uint16,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_srcChainId)),
        ethereum.Value.fromBytes(_srcAddress)
      ]
    );

    return result[0].toBoolean();
  }

  try_isTrustedRemote(
    _srcChainId: i32,
    _srcAddress: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedRemote",
      "isTrustedRemote(uint16,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_srcChainId)),
        ethereum.Value.fromBytes(_srcAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lzEndpoint(): Address {
    let result = super.call("lzEndpoint", "lzEndpoint():(address)", []);

    return result[0].toAddress();
  }

  try_lzEndpoint(): ethereum.CallResult<Address> {
    let result = super.tryCall("lzEndpoint", "lzEndpoint():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  minDstGasLookup(param0: i32, param1: i32): BigInt {
    let result = super.call(
      "minDstGasLookup",
      "minDstGasLookup(uint16,uint16):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
      ]
    );

    return result[0].toBigInt();
  }

  try_minDstGasLookup(param0: i32, param1: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minDstGasLookup",
      "minDstGasLookup(uint16,uint16):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  precrime(): Address {
    let result = super.call("precrime", "precrime():(address)", []);

    return result[0].toAddress();
  }

  try_precrime(): ethereum.CallResult<Address> {
    let result = super.tryCall("precrime", "precrime():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  trustedRemoteLookup(param0: i32): Bytes {
    let result = super.call(
      "trustedRemoteLookup",
      "trustedRemoteLookup(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return result[0].toBytes();
  }

  try_trustedRemoteLookup(param0: i32): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "trustedRemoteLookup",
      "trustedRemoteLookup(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  votingEscrow(): Address {
    let result = super.call("votingEscrow", "votingEscrow():(address)", []);

    return result[0].toAddress();
  }

  try_votingEscrow(): ethereum.CallResult<Address> {
    let result = super.tryCall("votingEscrow", "votingEscrow():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  votingEscrowRemapper(): Address {
    let result = super.call(
      "votingEscrowRemapper",
      "votingEscrowRemapper():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_votingEscrowRemapper(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "votingEscrowRemapper",
      "votingEscrowRemapper():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _lzEndpoint(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _votingEscrowRemapper(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ForceResumeReceiveCall extends ethereum.Call {
  get inputs(): ForceResumeReceiveCall__Inputs {
    return new ForceResumeReceiveCall__Inputs(this);
  }

  get outputs(): ForceResumeReceiveCall__Outputs {
    return new ForceResumeReceiveCall__Outputs(this);
  }
}

export class ForceResumeReceiveCall__Inputs {
  _call: ForceResumeReceiveCall;

  constructor(call: ForceResumeReceiveCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ForceResumeReceiveCall__Outputs {
  _call: ForceResumeReceiveCall;

  constructor(call: ForceResumeReceiveCall) {
    this._call = call;
  }
}

export class LzReceiveCall extends ethereum.Call {
  get inputs(): LzReceiveCall__Inputs {
    return new LzReceiveCall__Inputs(this);
  }

  get outputs(): LzReceiveCall__Outputs {
    return new LzReceiveCall__Outputs(this);
  }
}

export class LzReceiveCall__Inputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class LzReceiveCall__Outputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }
}

export class NonblockingLzReceiveCall extends ethereum.Call {
  get inputs(): NonblockingLzReceiveCall__Inputs {
    return new NonblockingLzReceiveCall__Inputs(this);
  }

  get outputs(): NonblockingLzReceiveCall__Outputs {
    return new NonblockingLzReceiveCall__Outputs(this);
  }
}

export class NonblockingLzReceiveCall__Inputs {
  _call: NonblockingLzReceiveCall;

  constructor(call: NonblockingLzReceiveCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class NonblockingLzReceiveCall__Outputs {
  _call: NonblockingLzReceiveCall;

  constructor(call: NonblockingLzReceiveCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RetryMessageCall extends ethereum.Call {
  get inputs(): RetryMessageCall__Inputs {
    return new RetryMessageCall__Inputs(this);
  }

  get outputs(): RetryMessageCall__Outputs {
    return new RetryMessageCall__Outputs(this);
  }
}

export class RetryMessageCall__Inputs {
  _call: RetryMessageCall;

  constructor(call: RetryMessageCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RetryMessageCall__Outputs {
  _call: RetryMessageCall;

  constructor(call: RetryMessageCall) {
    this._call = call;
  }
}

export class SendTotalSupplyCall extends ethereum.Call {
  get inputs(): SendTotalSupplyCall__Inputs {
    return new SendTotalSupplyCall__Inputs(this);
  }

  get outputs(): SendTotalSupplyCall__Outputs {
    return new SendTotalSupplyCall__Outputs(this);
  }
}

export class SendTotalSupplyCall__Inputs {
  _call: SendTotalSupplyCall;

  constructor(call: SendTotalSupplyCall) {
    this._call = call;
  }

  get _dstChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _refundAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _zroPaymentAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _adapterParams(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SendTotalSupplyCall__Outputs {
  _call: SendTotalSupplyCall;

  constructor(call: SendTotalSupplyCall) {
    this._call = call;
  }
}

export class SendUserBalanceCall extends ethereum.Call {
  get inputs(): SendUserBalanceCall__Inputs {
    return new SendUserBalanceCall__Inputs(this);
  }

  get outputs(): SendUserBalanceCall__Outputs {
    return new SendUserBalanceCall__Outputs(this);
  }
}

export class SendUserBalanceCall__Inputs {
  _call: SendUserBalanceCall;

  constructor(call: SendUserBalanceCall) {
    this._call = call;
  }

  get _localUser(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _dstChainId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _refundAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _zroPaymentAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _adapterParams(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SendUserBalanceCall__Outputs {
  _call: SendUserBalanceCall;

  constructor(call: SendUserBalanceCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get _version(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _chainId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _configType(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _config(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class SetMinDstGasCall extends ethereum.Call {
  get inputs(): SetMinDstGasCall__Inputs {
    return new SetMinDstGasCall__Inputs(this);
  }

  get outputs(): SetMinDstGasCall__Outputs {
    return new SetMinDstGasCall__Outputs(this);
  }
}

export class SetMinDstGasCall__Inputs {
  _call: SetMinDstGasCall;

  constructor(call: SetMinDstGasCall) {
    this._call = call;
  }

  get _dstChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _packetType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _minGas(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetMinDstGasCall__Outputs {
  _call: SetMinDstGasCall;

  constructor(call: SetMinDstGasCall) {
    this._call = call;
  }
}

export class SetPrecrimeCall extends ethereum.Call {
  get inputs(): SetPrecrimeCall__Inputs {
    return new SetPrecrimeCall__Inputs(this);
  }

  get outputs(): SetPrecrimeCall__Outputs {
    return new SetPrecrimeCall__Outputs(this);
  }
}

export class SetPrecrimeCall__Inputs {
  _call: SetPrecrimeCall;

  constructor(call: SetPrecrimeCall) {
    this._call = call;
  }

  get _precrime(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPrecrimeCall__Outputs {
  _call: SetPrecrimeCall;

  constructor(call: SetPrecrimeCall) {
    this._call = call;
  }
}

export class SetReceiveVersionCall extends ethereum.Call {
  get inputs(): SetReceiveVersionCall__Inputs {
    return new SetReceiveVersionCall__Inputs(this);
  }

  get outputs(): SetReceiveVersionCall__Outputs {
    return new SetReceiveVersionCall__Outputs(this);
  }
}

export class SetReceiveVersionCall__Inputs {
  _call: SetReceiveVersionCall;

  constructor(call: SetReceiveVersionCall) {
    this._call = call;
  }

  get _version(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetReceiveVersionCall__Outputs {
  _call: SetReceiveVersionCall;

  constructor(call: SetReceiveVersionCall) {
    this._call = call;
  }
}

export class SetSendVersionCall extends ethereum.Call {
  get inputs(): SetSendVersionCall__Inputs {
    return new SetSendVersionCall__Inputs(this);
  }

  get outputs(): SetSendVersionCall__Outputs {
    return new SetSendVersionCall__Outputs(this);
  }
}

export class SetSendVersionCall__Inputs {
  _call: SetSendVersionCall;

  constructor(call: SetSendVersionCall) {
    this._call = call;
  }

  get _version(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetSendVersionCall__Outputs {
  _call: SetSendVersionCall;

  constructor(call: SetSendVersionCall) {
    this._call = call;
  }
}

export class SetTrustedRemoteCall extends ethereum.Call {
  get inputs(): SetTrustedRemoteCall__Inputs {
    return new SetTrustedRemoteCall__Inputs(this);
  }

  get outputs(): SetTrustedRemoteCall__Outputs {
    return new SetTrustedRemoteCall__Outputs(this);
  }
}

export class SetTrustedRemoteCall__Inputs {
  _call: SetTrustedRemoteCall;

  constructor(call: SetTrustedRemoteCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _path(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetTrustedRemoteCall__Outputs {
  _call: SetTrustedRemoteCall;

  constructor(call: SetTrustedRemoteCall) {
    this._call = call;
  }
}

export class SetTrustedRemoteAddressCall extends ethereum.Call {
  get inputs(): SetTrustedRemoteAddressCall__Inputs {
    return new SetTrustedRemoteAddressCall__Inputs(this);
  }

  get outputs(): SetTrustedRemoteAddressCall__Outputs {
    return new SetTrustedRemoteAddressCall__Outputs(this);
  }
}

export class SetTrustedRemoteAddressCall__Inputs {
  _call: SetTrustedRemoteAddressCall;

  constructor(call: SetTrustedRemoteAddressCall) {
    this._call = call;
  }

  get _remoteChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _remoteAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetTrustedRemoteAddressCall__Outputs {
  _call: SetTrustedRemoteAddressCall;

  constructor(call: SetTrustedRemoteAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
